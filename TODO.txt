For a smart web-based system for a rescue center that utilizes traffic accident data, the system should encompass the following features:

1. User Interface (UI)
Dashboard: A real-time updating dashboard showing the number of active accidents, the severity of each accident, the number of dispatched units, etc.

Map Integration: A map view highlighting the location of traffic accidents. The map could also show traffic congestion, road closures, and the current location of rescue units.

Accident Details: When an accident point on the map is clicked, it should provide details like time of accident, estimated severity, involved vehicles, and more.

2. Data Collection
Vehicle Sensors: Connect with vehicles' onboard sensors to detect crashes. This would include things like accelerometer data, airbag deployment status, and more.

Public Reports: Allow public users or witnesses to report accidents via the system, potentially with the ability to upload images or videos.

3. Data Processing & Analysis
Severity Estimation Algorithm: Process data from vehicle sensors and/or reports to automatically determine accident severity. Factors could include force of impact, number of vehicles involved, type of collision (e.g., head-on, side-impact), etc.

Predictive Analytics: Use historical accident data to predict the potential number of victims or the potential need for resources based on similar past incidents.

4. Dispatch & Communication
Automated Dispatch: Based on the severity and type of the accident, automatically suggest the number and type of rescue units to be dispatched.

Communication Module: Allow for two-way communication between the rescue center and dispatched units.

ETA Estimations: Given the location of the accident and the location of the rescue units, provide an estimated time of arrival.

5. Data Storage & Management
Accident Database: Store information on all reported accidents, including details, response times, outcomes, etc.

Resource Management: Track available rescue units, their status (e.g., available, dispatched, on-scene, etc.), equipment on hand, and more.

6. Training & Simulation
Simulation Mode: Allow for the simulation of accidents to train rescue center staff on how to respond using the system.

Feedback Loop: Post-incident reviews to learn from every accident and constantly improve the system.

7. Security & Privacy
Data Encryption: Ensure that data, especially personal data from vehicles or individuals, is encrypted and stored securely.

Access Control: Limit access to the system based on roles (e.g., dispatcher, administrator, etc.).

8. Integration & Expansion
Integration with Other Systems: Ensure the system can integrate with other emergency services (like hospitals, police, fire departments) for coordinated response.

Scalability: Design the system such that it can handle a growing number of vehicles, users, and rescue units.

9. Notification System
Real-Time Alerts: Notify the rescue center immediately when an accident is detected.

Public Notifications: Optionally, alert the public about major accidents or road closures.

Implementing this system requires a multidisciplinary approach, involving fields like web development, data science, transportation engineering, and emergency management. This solution could greatly improve the efficiency and effectiveness of rescue operations following traffic accidents.